{"ast":null,"code":"var _jsxFileName = \"/Users/tayusama/Downloads/ux-q4-react-prop-drilling-jake-johnson-kenzie-master 2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Product from \"./components/Product\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: [{\n        id: shortid.generate(),\n        name: \"Scarf\",\n        price: \"11.50\",\n        quantity: 1\n      }, {\n        id: shortid.generate(),\n        name: \"Shirt\",\n        price: \"9.80\",\n        quantity: 1\n      }, {\n        id: shortid.generate(),\n        name: \"Pants\",\n        price: \"25.50\",\n        quantity: 1\n      }],\n      isOnMailingList: false\n    };\n\n    this.handleIncrementQuantity = id => {\n      this.setState(state => {\n        const newList = state.cart.map(item => {\n          if (item.id === id && item.quantity < 10000) {\n            return { ...item,\n              quantity: item.quantity + 1\n            };\n          } else {\n            return item;\n          }\n        });\n        return {\n          cart: newList\n        };\n      });\n    };\n\n    this.handleDecrementQuantity = id => {// Your Code Here!\n      // Do the same as handleIncrementQuantity, but decrement it instead\n      // Remember that you should not decrement below zero!\n    };\n\n    this.handleCheckout = () => {\n      alert(\"Purchase Completed!\" + (this.state.isOnMailingList ? \" You will be added to the mailing list!\" : \"\"));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: this.state.cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Product, {\n            item: item,\n            onIncrementQuantity: this.handleIncrementQuantity,\n            onDecrementQuantity: this\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            defaultChecked: this.stateIncisOnMailingList,\n            onChange: event => // Your code here!\n            // Use setState to update the flag in state for the checkbox\n            // Hint: use event.target.checked\n            this.setState()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), \"Sign me up for the mailing list!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleCheckout,\n        children: \"Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tayusama/Downloads/ux-q4-react-prop-drilling-jake-johnson-kenzie-master 2/src/App.js"],"names":["React","Component","Product","shortid","App","state","cart","id","generate","name","price","quantity","isOnMailingList","handleIncrementQuantity","setState","newList","map","item","handleDecrementQuantity","handleCheckout","alert","render","stateIncisOnMailingList","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,EAAE,EAAEJ,OAAO,CAACK,QAAR,EADN;AAEEC,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADI,EAOJ;AACEJ,QAAAA,EAAE,EAAEJ,OAAO,CAACK,QAAR,EADN;AAEEC,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,KAAK,EAAE,MAHT;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OAPI,EAaJ;AACEJ,QAAAA,EAAE,EAAEJ,OAAO,CAACK,QAAR,EADN;AAEEC,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,KAAK,EAAE,OAHT;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OAbI,CADA;AAqBNC,MAAAA,eAAe,EAAE;AArBX,KADkB;;AAAA,SAyB1BC,uBAzB0B,GAyBCN,EAAD,IAAQ;AAChC,WAAKO,QAAL,CAAeT,KAAD,IAAW;AACvB,cAAMU,OAAO,GAAGV,KAAK,CAACC,IAAN,CAAWU,GAAX,CAAgBC,IAAD,IAAU;AACvC,cAAIA,IAAI,CAACV,EAAL,KAAYA,EAAZ,IAAkBU,IAAI,CAACN,QAAL,GAAe,KAArC,EAA4C;AAC1C,mBAAO,EAAE,GAAGM,IAAL;AAAWN,cAAAA,QAAQ,EAAEM,IAAI,CAACN,QAAL,GAAgB;AAArC,aAAP;AACD,WAFD,MAEO;AACL,mBAAOM,IAAP;AACD;AACF,SANe,CAAhB;AAQA,eAAO;AACLX,UAAAA,IAAI,EAAES;AADD,SAAP;AAGD,OAZD;AAaD,KAvCyB;;AAAA,SAyC1BG,uBAzC0B,GAyCCX,EAAD,IAAQ,CAChC;AACA;AACA;AACD,KA7CyB;;AAAA,SA+C1BY,cA/C0B,GA+CT,MAAM;AACrBC,MAAAA,KAAK,CACH,yBACG,KAAKf,KAAL,CAAWO,eAAX,GACG,yCADH,GAEG,EAHN,CADG,CAAL;AAMD,KAtDyB;AAAA;;AAwD1BS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBACG,KAAKhB,KAAL,CAAWC,IAAX,CAAgBU,GAAhB,CAAqBC,IAAD,iBACnB;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEA,IAAf;AACE,YAAA,mBAAmB,EAAE,KAAKJ,uBAD5B;AAEE,YAAA,mBAAmB,EAAG;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF,WAASI,IAAI,CAACV,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,cAAc,EAAE,KAAKe,uBAFvB;AAGE,YAAA,QAAQ,EAAGC,KAAD,IACR;AACA;AACA;AACA,iBAAKT,QAAL;AAPJ;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eA4BE;AAAQ,QAAA,OAAO,EAAE,KAAKK,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAzFyB;;AA4F5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Product from \"./components/Product\";\nimport shortid from \"shortid\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    cart: [\n      {\n        id: shortid.generate(),\n        name: \"Scarf\",\n        price: \"11.50\",\n        quantity: 1,\n      },\n      {\n        id: shortid.generate(),\n        name: \"Shirt\",\n        price: \"9.80\",\n        quantity: 1,\n      },\n      {\n        id: shortid.generate(),\n        name: \"Pants\",\n        price: \"25.50\",\n        quantity: 1,\n      },\n    ],\n    isOnMailingList: false,\n  };\n\n  handleIncrementQuantity = (id) => {\n    this.setState((state) => {\n      const newList = state.cart.map((item) => {\n        if (item.id === id && item.quantity <10000) {\n          return { ...item, quantity: item.quantity + 1 };\n        } else {\n          return item;\n        }\n      });\n\n      return {\n        cart: newList,\n      };\n    });\n  };\n\n  handleDecrementQuantity = (id) => {\n    // Your Code Here!\n    // Do the same as handleIncrementQuantity, but decrement it instead\n    // Remember that you should not decrement below zero!\n  };\n\n  handleCheckout = () => {\n    alert(\n      \"Purchase Completed!\" +\n        (this.state.isOnMailingList\n          ? \" You will be added to the mailing list!\"\n          : \"\")\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h2>Shopping Cart</h2>\n        <ul className=\"list\">\n          {this.state.cart.map((item) => (\n            <li key={item.id}>\n              <Product item={item}\n                onIncrementQuantity={this.handleIncrementQuantity}\n                onDecrementQuantity ={this}\n              />\n              \n            </li>\n          ))}\n        </ul>\n        <div>\n          <label>\n            <input\n              type=\"checkbox\"\n              defaultChecked={this.stateIncisOnMailingList}\n              onChange={(event) =>\n                // Your code here!\n                // Use setState to update the flag in state for the checkbox\n                // Hint: use event.target.checked\n                this.setState()\n              }\n            />\n            Sign me up for the mailing list!\n          </label>\n        </div>\n        <button onClick={this.handleCheckout}>Purchase</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}